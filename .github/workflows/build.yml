name: Build Images
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 */6 * * *'

jobs:
  build-ubuntu-20-test:
    uses: ./.github/workflows/_build.yml
    with:
      name: actions-test
      tags: "jona"
      type: "linux"

  build-ubuntu-20:
    runs-on: ubuntu-20.04
    env:
      IMAGE_TAG: "ubuntu-20"
      IMAGE_TAG_ALT: "ubuntu"
    steps:
      - uses: actions/checkout@v2
      - uses: e1himself/goss-installation-action@v1.0.3
        with:
          version: 'v0.3.14'
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: dgoss run steamcmd/steamcmd:$IMAGE_TAG --entrypoint=""
      # master
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: for TAG in $IMAGE_TAG_ALT latest; do docker tag steamcmd/steamcmd:$IMAGE_TAG steamcmd/steamcmd:${TAG}; done
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: for TAG in $IMAGE_TAG $IMAGE_TAG_ALT latest; do docker push steamcmd/steamcmd:${TAG}; done

  build-ubuntu-18:
    runs-on: ubuntu-20.04
    env:
      IMAGE_TAG: "ubuntu-18"
    steps:
      - uses: actions/checkout@v2
      - uses: e1himself/goss-installation-action@v1.0.3
        with:
          version: 'v0.3.14'
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: dgoss run steamcmd/steamcmd:$IMAGE_TAG --entrypoint=""
      # master
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:$IMAGE_TAG

  build-ubuntu-16:
    runs-on: ubuntu-20.04
    env:
      IMAGE_TAG: "ubuntu-16"
    steps:
      - uses: actions/checkout@v2
      - uses: e1himself/goss-installation-action@v1.0.3
        with:
          version: 'v0.3.14'
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: dgoss run steamcmd/steamcmd:$IMAGE_TAG --entrypoint=""
      # master
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:$IMAGE_TAG

  build-alpine-3:
    runs-on: ubuntu-20.04
    needs: build-ubuntu-20
    env:
      IMAGE_TAG: "alpine-3"
      IMAGE_TAG_ALT: "alpine"
    steps:
      - uses: actions/checkout@v2
      - uses: e1himself/goss-installation-action@v1.0.3
        with:
          version: 'v0.3.14'
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: dgoss run steamcmd/steamcmd:$IMAGE_TAG --entrypoint=""
      # master
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker tag steamcmd/steamcmd:$IMAGE_TAG steamcmd/steamcmd:$IMAGE_TAG_ALT
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: for TAG in $IMAGE_TAG $IMAGE_TAG_ALT; do docker push steamcmd/steamcmd:${TAG}; done

  build-rocky-9:
    runs-on: ubuntu-20.04
    needs: build-ubuntu-20
    env:
      IMAGE_TAG: "rocky-9"
      IMAGE_TAG_ALT: "rocky"
    steps:
      - uses: actions/checkout@v2
      - uses: e1himself/goss-installation-action@v1.0.3
        with:
          version: 'v0.3.14'
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: dgoss run steamcmd/steamcmd:$IMAGE_TAG --entrypoint=""
      # master
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker tag steamcmd/steamcmd:$IMAGE_TAG steamcmd/steamcmd:$IMAGE_TAG_ALT
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: for TAG in $IMAGE_TAG $IMAGE_TAG_ALT; do docker push steamcmd/steamcmd:${TAG}; done

  build-rocky-8:
    runs-on: ubuntu-20.04
    needs: build-ubuntu-20
    env:
      IMAGE_TAG: "rocky-8"
    steps:
      - uses: actions/checkout@v2
      - uses: e1himself/goss-installation-action@v1.0.3
        with:
          version: 'v0.3.14'
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: dgoss run steamcmd/steamcmd:$IMAGE_TAG --entrypoint=""
      # master
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:$IMAGE_TAG

  build-centos-9:
    runs-on: ubuntu-20.04
    needs: build-ubuntu-20
    env:
      IMAGE_TAG: "centos-9"
      IMAGE_TAG_ALT: "centos"
    steps:
      - uses: actions/checkout@v2
      - uses: e1himself/goss-installation-action@v1.0.3
        with:
          version: 'v0.3.14'
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: dgoss run steamcmd/steamcmd:$IMAGE_TAG --entrypoint=""
      # master
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker tag steamcmd/steamcmd:$IMAGE_TAG steamcmd/steamcmd:$IMAGE_TAG_ALT
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: for TAG in $IMAGE_TAG $IMAGE_TAG_ALT; do docker push steamcmd/steamcmd:${TAG}; done

  build-centos-8:
    runs-on: ubuntu-20.04
    needs: build-ubuntu-20
    env:
      IMAGE_TAG: "centos-8"
    steps:
      - uses: actions/checkout@v2
      - uses: e1himself/goss-installation-action@v1.0.3
        with:
          version: 'v0.3.14'
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:$IMAGE_TAG .
        working-directory: dockerfiles/${{ env.IMAGE_TAG }}
      - name: Test Image
        run: dgoss run steamcmd/steamcmd:$IMAGE_TAG --entrypoint=""
      # master
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:$IMAGE_TAG

  build-windows-1809:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:windows-1809 .
        working-directory: dockerfiles/windows-1809
      - name: Test Image
        run: docker run steamcmd/steamcmd:windows-1809 +quit
      # master
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker tag steamcmd/steamcmd:windows-1809 steamcmd/steamcmd:windows
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:windows-1809
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:windows

  build-windows-core-2019:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:windows-core-2019 .
        working-directory: dockerfiles/windows-core-2019
      - name: Test Image
        run: docker run steamcmd/steamcmd:windows-core-2019 +quit
      # master
      - name: Tag Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker tag steamcmd/steamcmd:windows-core-2019 steamcmd/steamcmd:windows-core
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:windows-core-2019
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:windows-core

  build-windows-core-1809:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/steamcmd:windows-core-1809 .
        working-directory: dockerfiles/windows-core-1809
      - name: Test Image
        run: docker run steamcmd/steamcmd:windows-core-1809 +quit
      # master
      - name: Push Image
        if: ${{ github.ref == 'refs/heads/master' }}
        run: docker push steamcmd/steamcmd:windows-core-1809
